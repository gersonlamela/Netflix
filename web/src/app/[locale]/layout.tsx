import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Toaster } from "@/components/ui/sonner";
import { routing } from "@/i18n/routing";
import { getMessages, setRequestLocale } from "next-intl/server";
import NotFound from "../not-found";
import { NextIntlClientProvider } from "next-intl";

const netflixSans = localFont({
  src: [
    {
      path: "../fonts/NetflixSans-Light.woff2",
      weight: "300",
    },
    {
      path: "../fonts/NetflixSans-Regular.woff2",
      weight: "400",
    },
    {
      path: "../fonts/NetflixSans-Medium.woff2",
      weight: "500",
    },
    {
      path: "../fonts/NetflixSans-Bold.woff2",
      weight: "700",
    },
  ],
  variable: "--font-netflix",
});

export const metadata: Metadata = {
  title: "Netflix",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

export default async function RootLayout({
  children,
  params,
}: Readonly<RootLayoutProps>) {
  // Ensure that the incoming `locale` is valid

  const { locale } = await params;
  if (!routing.locales.includes(locale as never)) {
    return (
      <html lang={locale}>
        <body className={`${netflixSans.className} antialiased`}>
          <NotFound />
          <Toaster />
        </body>
      </html>
    );
  }

  // Enable static rendering
  setRequestLocale(locale);
  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body
        className={`${netflixSans.className} antialiased bg-black text-primary-white`}
      >
        <NextIntlClientProvider messages={messages}>
          {children}
          <Toaster />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
